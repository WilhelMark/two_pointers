#include <iostream>  // Подключаем библиотеку для ввода-вывода
#include <cstring>   // Подключаем библиотеку для работы со строками

// Функция для проверки, является ли строка b подстрокой строки a
bool substr(const char* a, const char* b) {
    // Проверка на пустую подстроку (пустая строка считается подстрокой любой строки)
    if (strlen(b) == 0) return true;

    // Получаем длины строк a и b
    size_t lenA = strlen(a);
    size_t lenB = strlen(b);

    // Если длина строки a меньше длины строки b, то b не может быть подстрокой a
    if (lenA < lenB) return false;

    // Основной алгоритм поиска подстроки
    for (size_t i = 0; i <= lenA - lenB; ++i) {
        bool found = true;  // Предполагаем, что подстрока найдена
        for (size_t j = 0; j < lenB; ++j) {
            if (a[i + j] != b[j]) {  // Сравниваем символы
                found = false;       // Если не совпадают, устанавливаем флаг в false
                break;               // Выходим из внутреннего цикла
            }
        }
        if (found) return true;  // Если все символы совпали, возвращаем true
    }
    return false;  // Если не нашли подстроку, возвращаем false
}

// Основная функция программы
int main() {
    const char* a = "Hello world";  // Исходная строка
    const char* b = "wor";           // Подстрока для поиска
    const char* c = "banana";        // Подстрока для поиска

    // Выводим результаты проверки подстрок в консоль
    std::cout << std::boolalpha   // Включаем вывод логических значений как true/false
              << substr(a, b) << " "  // Проверяем, является ли b подстрокой a
              << substr(a, c);        // Проверяем, является ли c подстрокой a

    return 0;  // Возвращаем 0 для успешного завершения программы
}
